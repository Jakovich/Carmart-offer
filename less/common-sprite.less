/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@arrow-down-name: 'arrow-down';
@arrow-down-x: 331px;
@arrow-down-y: 191px;
@arrow-down-offset-x: -331px;
@arrow-down-offset-y: -191px;
@arrow-down-width: 12px;
@arrow-down-height: 8px;
@arrow-down-total-width: 391px;
@arrow-down-total-height: 289px;
@arrow-down-image: 'common-sprite.png';
@arrow-down: 331px 191px -331px -191px 12px 8px 391px 289px 'common-sprite.png' 'arrow-down';
@arrow-left-name: 'arrow-left';
@arrow-left-x: 320px;
@arrow-left-y: 191px;
@arrow-left-offset-x: -320px;
@arrow-left-offset-y: -191px;
@arrow-left-width: 11px;
@arrow-left-height: 18px;
@arrow-left-total-width: 391px;
@arrow-left-total-height: 289px;
@arrow-left-image: 'common-sprite.png';
@arrow-left: 320px 191px -320px -191px 11px 18px 391px 289px 'common-sprite.png' 'arrow-left';
@arrow-right-name: 'arrow-right';
@arrow-right-x: 375px;
@arrow-right-y: 162px;
@arrow-right-offset-x: -375px;
@arrow-right-offset-y: -162px;
@arrow-right-width: 11px;
@arrow-right-height: 19px;
@arrow-right-total-width: 391px;
@arrow-right-total-height: 289px;
@arrow-right-image: 'common-sprite.png';
@arrow-right: 375px 162px -375px -162px 11px 19px 391px 289px 'common-sprite.png' 'arrow-right';
@check-name: 'check';
@check-x: 375px;
@check-y: 181px;
@check-offset-x: -375px;
@check-offset-y: -181px;
@check-width: 14px;
@check-height: 9px;
@check-total-width: 391px;
@check-total-height: 289px;
@check-image: 'common-sprite.png';
@check: 375px 181px -375px -181px 14px 9px 391px 289px 'common-sprite.png' 'check';
@lightning-name: 'lightning';
@lightning-x: 375px;
@lightning-y: 135px;
@lightning-offset-x: -375px;
@lightning-offset-y: -135px;
@lightning-width: 15px;
@lightning-height: 27px;
@lightning-total-width: 391px;
@lightning-total-height: 289px;
@lightning-image: 'common-sprite.png';
@lightning: 375px 135px -375px -135px 15px 27px 391px 289px 'common-sprite.png' 'lightning';
@next-name: 'next';
@next-x: 240px;
@next-y: 0px;
@next-offset-x: -240px;
@next-offset-y: 0px;
@next-width: 80px;
@next-height: 80px;
@next-total-width: 391px;
@next-total-height: 289px;
@next-image: 'common-sprite.png';
@next: 240px 0px -240px 0px 80px 80px 391px 289px 'common-sprite.png' 'next';
@prev-name: 'prev';
@prev-x: 240px;
@prev-y: 80px;
@prev-offset-x: -240px;
@prev-offset-y: -80px;
@prev-width: 80px;
@prev-height: 80px;
@prev-total-width: 391px;
@prev-total-height: 289px;
@prev-image: 'common-sprite.png';
@prev: 240px 80px -240px -80px 80px 80px 391px 289px 'common-sprite.png' 'prev';
@process-choise-name: 'process-choise';
@process-choise-x: 120px;
@process-choise-y: 0px;
@process-choise-offset-x: -120px;
@process-choise-offset-y: 0px;
@process-choise-width: 120px;
@process-choise-height: 120px;
@process-choise-total-width: 391px;
@process-choise-total-height: 289px;
@process-choise-image: 'common-sprite.png';
@process-choise: 120px 0px -120px 0px 120px 120px 391px 289px 'common-sprite.png' 'process-choise';
@process-delivery-name: 'process-delivery';
@process-delivery-x: 0px;
@process-delivery-y: 0px;
@process-delivery-offset-x: 0px;
@process-delivery-offset-y: 0px;
@process-delivery-width: 120px;
@process-delivery-height: 120px;
@process-delivery-total-width: 391px;
@process-delivery-total-height: 289px;
@process-delivery-image: 'common-sprite.png';
@process-delivery: 0px 0px 0px 0px 120px 120px 391px 289px 'common-sprite.png' 'process-delivery';
@process-options-name: 'process-options';
@process-options-x: 0px;
@process-options-y: 120px;
@process-options-offset-x: 0px;
@process-options-offset-y: -120px;
@process-options-width: 120px;
@process-options-height: 120px;
@process-options-total-width: 391px;
@process-options-total-height: 289px;
@process-options-image: 'common-sprite.png';
@process-options: 0px 120px 0px -120px 120px 120px 391px 289px 'common-sprite.png' 'process-options';
@process-payment-name: 'process-payment';
@process-payment-x: 120px;
@process-payment-y: 120px;
@process-payment-offset-x: -120px;
@process-payment-offset-y: -120px;
@process-payment-width: 120px;
@process-payment-height: 120px;
@process-payment-total-width: 391px;
@process-payment-total-height: 289px;
@process-payment-image: 'common-sprite.png';
@process-payment: 120px 120px -120px -120px 120px 120px 391px 289px 'common-sprite.png' 'process-payment';
@reasons-payment-name: 'reasons-payment';
@reasons-payment-x: 320px;
@reasons-payment-y: 71px;
@reasons-payment-offset-x: -320px;
@reasons-payment-offset-y: -71px;
@reasons-payment-width: 63px;
@reasons-payment-height: 64px;
@reasons-payment-total-width: 391px;
@reasons-payment-total-height: 289px;
@reasons-payment-image: 'common-sprite.png';
@reasons-payment: 320px 71px -320px -71px 63px 64px 391px 289px 'common-sprite.png' 'reasons-payment';
@reasons-price-name: 'reasons-price';
@reasons-price-x: 0px;
@reasons-price-y: 240px;
@reasons-price-offset-x: 0px;
@reasons-price-offset-y: -240px;
@reasons-price-width: 110px;
@reasons-price-height: 49px;
@reasons-price-total-width: 391px;
@reasons-price-total-height: 289px;
@reasons-price-image: 'common-sprite.png';
@reasons-price: 0px 240px 0px -240px 110px 49px 391px 289px 'common-sprite.png' 'reasons-price';
@reasons-reserve-name: 'reasons-reserve';
@reasons-reserve-x: 320px;
@reasons-reserve-y: 0px;
@reasons-reserve-offset-x: -320px;
@reasons-reserve-offset-y: 0px;
@reasons-reserve-width: 71px;
@reasons-reserve-height: 71px;
@reasons-reserve-total-width: 391px;
@reasons-reserve-total-height: 289px;
@reasons-reserve-image: 'common-sprite.png';
@reasons-reserve: 320px 0px -320px 0px 71px 71px 391px 289px 'common-sprite.png' 'reasons-reserve';
@reasons-return-name: 'reasons-return';
@reasons-return-x: 240px;
@reasons-return-y: 160px;
@reasons-return-offset-x: -240px;
@reasons-return-offset-y: -160px;
@reasons-return-width: 78px;
@reasons-return-height: 69px;
@reasons-return-total-width: 391px;
@reasons-return-total-height: 289px;
@reasons-return-image: 'common-sprite.png';
@reasons-return: 240px 160px -240px -160px 78px 69px 391px 289px 'common-sprite.png' 'reasons-return';
@reviews-name: 'reviews';
@reviews-x: 320px;
@reviews-y: 135px;
@reviews-offset-x: -320px;
@reviews-offset-y: -135px;
@reviews-width: 55px;
@reviews-height: 56px;
@reviews-total-width: 391px;
@reviews-total-height: 289px;
@reviews-image: 'common-sprite.png';
@reviews: 320px 135px -320px -135px 55px 56px 391px 289px 'common-sprite.png' 'reviews';
@spritesheet-width: 391px;
@spritesheet-height: 289px;
@spritesheet-image: 'common-sprite.png';
@spritesheet-sprites: @arrow-down @arrow-left @arrow-right @check @lightning @next @prev @process-choise @process-delivery @process-options @process-payment @reasons-payment @reasons-price @reasons-reserve @reasons-return @reviews;
@spritesheet: 391px 289px 'common-sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
